apply plugin: 'com.android.library'

sourceCompatibility = "1.7"
targetCompatibility = "1.7"

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:26.+'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
//    compile project(':router-annotation')
    compile 'individual.leobert.libs:router-base:0.0.2'
}


def sdk_appendix = "base"
def sdk_baseName = "component"
def sdk_version = "0.0.2"

task buildJar(dependsOn: ['compileReleaseJavaWithJavac'], type: Jar) {

    appendix = sdk_appendix
    baseName = sdk_baseName
    version = sdk_version
    //classifier = "release"
    //后缀名
    extension = "jar"
    //最终的Jar 包名 ， 如果没设置 ， 默认为[baseName] - [appendix] - [version] - [classifier].[extension]

    // 需打包的资源所在的路径集
    def srcClassDir = [project.buildDir.absolutePath + "/intermediates/classes/release"];
    //初始化资源路径集
    from srcClassDir

    //排除这两个文件
    include("osp/leobert/**/*.class")
    exclude("osp/leobert/android/component/BuildConfig.class",
            "osp/leobert/android/component/R.class",
            "osp/leobert/android/component/R\$*.class")
}

task buildJarAndCopy(dependsOn: "buildJar", type: Copy) {
    from(project.buildDir.absolutePath + "/libs")
    include(sdk_baseName + "-" + sdk_appendix + "-" + sdk_version + ".jar")
    into("release")
}

/*
 * MIT License
 *
 * Copyright (c) 2017 leobert-lan
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/////////////////////////////////
/// upload
/////////////////////////////////


apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: 'maven-publish'
//apply plugin: 'maven'


//./gradlew javadocJar
//gradlew sourcesJar
//gradlew install
//gradlew bintrayUpload

// 组织
group = "individual.leobert.libs"

// 根节点添加
version = "0.0.2"
import groovy.transform.Field;
@Field project_name = "component-base"

// 根节点添加
def siteUrl = 'https://github.com/leobert-lan/android-common'    // project homepage
def gitUrl = 'https://github.com/leobert-lan/android-common.git' // project git


repositories {
    jcenter {
        url "http://jcenter.bintray.com/"
    }
}

buildscript {
    repositories {
        jcenter()
    }
    tasks.withType(org.gradle.api.tasks.compile.JavaCompile) {
        options.encoding = "UTF-8"
        options.compilerArgs << "-Xlint:unchecked"
    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}


//
//javadoc {
//    options {
//        encoding "UTF-8"
//        charSet 'UTF-8'
//        author true
//        version true
//        links "http://docs.oracle.com/javase/7/docs/api"
//    }
//}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", "src/main/groovy"]
        }
        resources {
            srcDirs = ["src/main/resources/"]
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

// 根节点添加
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'jar'
                name project_name
                url siteUrl
                licenses {
                    license {
                        name 'MIT'
                        url 'https://opensource.org/licenses/MIT'
//                        name 'The Apache Software License, Version 2.0'
//                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'leobert-lan'
                        name 'lan.leobert'
                        email 'leobert.l@hotmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {

    user =  properties.getProperty("bintray_user")
    key = properties.getProperty("bintray_apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = project_name    // #CONFIG# project name in jcenter
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["MIT"]
//        labels = ['gradle', 'plugin']
//        licenses = ["Apache-2.0"]
        publish = true
    }
}
